@model WebDAL.DataModels.Items

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_LayoutClient.cshtml";
}
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal container">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ItemId)

        <div class="form-group">
            @Html.LabelFor(model => model.ItemTitle, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ItemTitle, new { htmlAttributes = new { @class = "form-control readonly" } })
                @Html.ValidationMessageFor(model => model.ItemTitle, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ItemDescription, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div id="toolbar-container"></div>
                <div id="editor"></div>
                @Html.EditorFor(model => model.ItemDescription, new { htmlAttributes = new { @class = "form-control hidden" } })
                @Html.ValidationMessageFor(model => model.ItemDescription, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ItemImage, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ItemImage, new { htmlAttributes = new { @class = "form-control" } })
                <button type="button" class="btn btn-success pick-img">Chọn ảnh</button>
                @Html.ValidationMessageFor(model => model.ItemImage, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MinimumBid, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MinimumBid, new { htmlAttributes = new { @class = "form-control " } })
                @Html.ValidationMessageFor(model => model.MinimumBid, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

@section scripts{
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Content/ckeditor5/ckeditor.js"></script>
    
    <script>
        DecoupledEditor
            .create(document.querySelector('#editor'))
            .then(editor => {
                editor.setData($("#ItemDescription").val());
                editor.model.document.on('change:data', () => {
                    $("#ItemDescription").val(editor.getData());
                })
                const toolbarContainer = document.querySelector('#toolbar-container');

                toolbarContainer.appendChild(editor.ui.view.toolbar.element);
            })
            .catch(error => {
                console.error(error);
            });
        
    </script>
    <script src="~/CKFinderScripts/ckfinder.js"></script>
    <script>
        $(function () {
            $(".pick-img").click(function () {
                CKFinder.modal({
                    chooseFiles: true,
                    width: 800,
                    height: 600,
                    onInit: function (finder) {
                        finder.on('files:choose', function (evt) {
                            var file = evt.data.files.first();
                            var output = document.getElementById("ItemImage");
                            output.value = file.getUrl();
                        });

                        finder.on('file:choose:resizedImage', function (evt) {
                            var output = document.getElementById("ItemImage");
                            output.value = evt.data.resizedUrl;
                        });
                    }
                });
            })
        })
    </script>
}